name: Deploy Application

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "Dockerfile"
      - ".github/workflows/deploy.yml"

env:
  PROJECT_ID: proj-b-475817
  SERVICE_NAME: project-base
  REGION: us-central1
  TF_VERSION: "1.6.0"

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]
      max-parallel: 1

    environment:
      name: ${{ matrix.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Verify Terraform Installation
        run: |
          terraform version
          which terraform

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get Repository URL from Terraform
        id: tf-output
        working-directory: terraform/environments/${{ matrix.environment }}
        run: |
          terraform init
          REPO_URL=$(terraform output -raw repository_url)
          echo "repo_url=$REPO_URL" >> $GITHUB_OUTPUT

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push
        run: |
          IMAGE_URL="${{ steps.tf-output.outputs.repo_url }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE_URL .
          docker push $IMAGE_URL

          # Tag como latest
          docker tag $IMAGE_URL ${{ steps.tf-output.outputs.repo_url }}/${{ env.SERVICE_NAME }}:latest
          docker push ${{ steps.tf-output.outputs.repo_url }}/${{ env.SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run services update ${{ env.SERVICE_NAME }} \
            --image ${{ steps.tf-output.outputs.repo_url }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed
