repos:
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.5
    hooks:
      - id: terraform_fmt
        name: Terraform fmt
        description: Rewrites all Terraform configuration files to a canonical format.
        entry: terraform fmt
        language: system
        files: (\.tf|\.tfvars)$
        exclude: \.terraform\/.*$

      - id: terraform_validate
        name: Terraform validate
        description: Validates all Terraform configuration files.
        entry: bash -c 'for dir in $(find . -name "*.tf" -exec dirname {} \; | sort -u); do echo "Validating $dir"; (cd "$dir" && terraform init -backend=false && terraform validate); done'
        language: system
        files: (\.tf)$
        exclude: \.terraform\/.*$

      - id: terraform_docs
        name: Terraform docs
        description: Inserts input and output documentation into README.md (or doc in main.tf).
        entry: terraform-docs
        language: system
        files: (\.tf)$
        exclude: \.terraform\/.*$

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        description: This hook trims trailing whitespace.
        entry: trailing-whitespace-fixer
        language: system
        types: [text]

      - id: end-of-file-fixer
        name: Fix End of Files
        description: Ensures that a file is either empty or ends with one newline.
        entry: end-of-file-fixer
        language: system
        types: [text]

      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Check for files that contain merge conflict strings.
        entry: check-merge-conflict
        language: system
        types: [text]

      - id: check-yaml
        name: Check Yaml
        description: This hook checks yaml files for parseable syntax.
        entry: check-yaml
        language: system
        types: [yaml]

      - id: check-json
        name: Check JSON
        description: This hook checks json files for parseable syntax.
        entry: check-json
        language: system
        types: [json]
